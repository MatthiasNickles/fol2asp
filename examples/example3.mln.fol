// Call fol2asp with switch --mlnrules

d(10;20;30).  // domain (range) { 10, 20, 30 }
r(a;b).
#domain d(X;Y).  // defines the domain of variables X and Y
#domain r(Z).

p(X,Y), q(Z) => s(X,Z) v p(20,Y).  // MLN-style hard rule 
EXIST X,Y,Z p(X,Y) v !p(Y,X) v q(Z).  // MLN-style hard clause

/* Note that by default "!" denotes default negation; use switch --strongexcl to 
 change the meaning of "!" to strong (classical) negation. */
