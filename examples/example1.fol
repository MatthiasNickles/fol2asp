r(X) :- p(X), not q.  % ASP rule (will simply be copied to the output)

d(10).  % a fact 
d(20).

(q | w) <- (not z(10,n) | r(a) & FORALL A, B, d(A), p(B): z(A,m) | r(B)).  % a FOL formula. 
% In FORALL ..., d(A) and p(B) specify the domains of variables A and B.
% F2LP equivalent to previous formula (additionally requires #domain specifications d(A) and p(B)): 
% (q | w) <- (not z(10,n) | (r(a) & ![A, B]: (z(A,m) | r(B)))).

(not x | ff(1,2,3) & z) -> u & v.  % another FOL formula. 
% Observe that precedence rules are akin those in Boolean expressions and partially 
% differ from F2LP. The above corresponds to ((not x) | (ff(1,2,3) & z)) -> (u & v).

% Note that "not" denotes default negation. Use "-" for strong negation and "!" for negation 
% which is default by default but denotes strong negation with switch --stringexcl

0{u;v;w}3.  % ASP choice rule (copied to output)

% Using Clingo with argument -n0, we get two answer sets for the fol2asp output: 
% { d(10) d(20) u v q } and { d(10) d(20) u v w }
